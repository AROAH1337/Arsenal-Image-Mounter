<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arsenal.ImageMounter.Dialogs</name>
    </assembly>
    <members>
        <member name="T:Arsenal.ImageMounter.DriverSetup">
            <summary>
            Routines for installing or uninstalling Arsenal Image Mounter kernel level
            modules.
            </summary>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.GetDriverVersionFromZipArchive(System.IO.Compression.ZipArchive)">
            <summary>
            Returns version of driver located inside a setup zip archive.
            </summary>
            <param name="zipFile">ZipFile object with setup files</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.InstallFromZipArchive(System.Windows.Forms.IWin32Window,System.IO.Compression.ZipArchive)">
            <summary>
            Installs Arsenal Image Mounter driver components from a zip archive.
            This routine automatically selects the correct driver version for
            current version of Windows.
            </summary>
            <param name="ownerWindow">This needs to be a valid handle to a Win32
            window that will be parent to dialog boxes etc shown by setup API. In
            console Applications, you could call
            NativeFileIO.Win32API.GetConsoleWindow() to get a window handle to the
            console window.</param>
            <param name="zipFile">An System.IO.Compression.ZipArchive opened for reading that
            contains setup source files. Directory layout in zip file needs to be
            like in DriverSetup.zip found in DriverSetup directory in repository,
            that is, one subdirectory for each kernel version followed by one
            subdirectory for each architecture.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.GetDriverVersionFromZipStream(System.IO.Stream)">
            <summary>
            Returns version of driver located inside a setup zip archive.
            </summary>
            <param name="zipStream">Stream containing a zip archive with setup files</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.InstallFromZipStream(System.Windows.Forms.IWin32Window,System.IO.Stream)">
            <summary>
            Installs Arsenal Image Mounter driver components from a zip archive.
            This routine automatically selects the correct driver version for
            current version of Windows.
            </summary>
            <param name="ownerWindow">This needs to be a valid handle to a Win32
            window that will be parent to dialog boxes etc shown by setup API. In
            console Applications, you could call
            NativeFileIO.Win32API.GetConsoleWindow() to get a window handle to the
            console window.</param>
            <param name="zipStream">A stream opened for reading a zip file
            containing setup source files. Directory layout in zip file needs to be
            like in DriverSetup.zip found in DriverSetup directory in repository,
            that is, one subdirectory for each kernel version followed by one
            subdirectory for each architecture.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.GetSetupFileDriverVersion(System.String)">
            <summary>
            Returns version of driver located in setup files directory.
            </summary>
            <param name="setupRoot">Root directory of setup files.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.GetSetupFileDriverVersion(Arsenal.ImageMounter.IO.CachedIniFile)">
            <summary>
            Returns version of driver located in setup files directory.
            </summary>
            <param name="infFile">.inf file used to identify version of driver.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.Install(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Installs Arsenal Image Mounter driver components from specified source
            path. This routine automatically selects the correct driver version for
            current version of Windows.
            </summary>
            <param name="ownerWindow">This needs to be a valid handle to a Win32
            window that will be parent to dialog boxes etc shown by setup API. In
            console Applications, you could call
            NativeFileIO.Win32API.GetConsoleWindow() to get a window handle to the
            console window.</param>
            <param name="setupsource">Directory with setup files. Directory layout
            at this path needs to be like in DriverSetup.7z found in DriverSetup
            directory in repository, that is, one subdirectory for each kernel
            version followed by one subdirectory for each architecture.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.Uninstall(System.Windows.Forms.IWin32Window)">
            <summary>
            Removes Arsenal Image Mounter device objects and driver components.
            </summary>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.InstallStorPortDriver(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Installs Arsenal Image Mounter driver components from specified source
            path. This routine installs the StorPort version of the driver, for use
            on Windows Server 2003 or later.
            </summary>
            <param name="ownerWindow">This needs to be a valid handle to a Win32
            window that will be parent to dialog boxes etc shown by setup API. In
            console Applications, you could call
            NativeFileIO.Win32API.GetConsoleWindow() to get a window handle to the
            console window.</param>
            <param name="setupsource">Directory with setup files. Directory layout
            at this path needs to be like in DriverSetup.7z found in DriverSetup
            directory in repository, that is, one subdirectory for each kernel
            version followed by one subdirectory for each architecture.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.RemoveDevices(System.Windows.Forms.IWin32Window)">
            <summary>
            Removes all plug-and-play device objects owned by Arsenal Image Mounter
            driver, in preparation for uninstalling the driver at later time.
            </summary>
            <param name="ownerWindow">This needs to be a valid handle to a Win32
            window that will be parent to dialog boxes etc shown by setup API. In
            console Applications, you could call
            NativeFileIO.Win32API.GetConsoleWindow() to get a window handle to the
            console window.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.InstallScsiPortDriver(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Installs Arsenal Image Mounter driver components from specified source
            path. This routine installs the ScsiPort version of the driver, for use
            on Windows XP or earlier.
            </summary>
            <param name="ownerWindow">This needs to be a valid handle to a Win32
            window that will be parent to dialog boxes etc shown by setup API. In
            console Applications, you could call
            NativeFileIO.Win32API.GetConsoleWindow() to get a window handle to the
            console window.</param>
            <param name="setupsource">Directory with setup files. Directory layout
            at this path needs to be like in DriverSetup.7z found in DriverSetup
            directory in repository, that is, one subdirectory for each kernel
            version followed by one subdirectory for each architecture.</param>
        </member>
        <member name="M:Arsenal.ImageMounter.DriverSetup.RemoveDriver">
            <summary>
            Removes Arsenal Image Mounter driver components.
            </summary>
        </member>
        <member name="T:Arsenal.ImageMounter.Dialogs.FormsExtensions">
            <summary>
            Extension methods for Windows Forms.
            </summary>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.FormsExtensions.GetTopMostOwner(System.Windows.Forms.Form)">
            <summary>
            Gets topmost owner window for a window
            </summary>
            <param name="form">Window where search should start</param>
            <returns>Topmost window that owns child windows down to supplied window</returns>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.FormsExtensions.SetValueSafe``1(Microsoft.Win32.RegistryKey,System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="RegKey"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.FormsExtensions.SetValueSafe``1(Microsoft.Win32.RegistryKey,System.String,System.Nullable{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="RegKey"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.FormsExtensions.SetValueSafe``1(Microsoft.Win32.RegistryKey,System.String,``0,Microsoft.Win32.RegistryValueKind)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="RegKey"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="valueKind"></param>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.FormsExtensions.SetValueSafe``1(Microsoft.Win32.RegistryKey,System.String,System.Nullable{``0},Microsoft.Win32.RegistryValueKind)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="RegKey"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="valueKind"></param>
        </member>
        <member name="T:Arsenal.ImageMounter.Dialogs.InputBox">
            <summary>
            Simple InputBox implementation for C#.
            Based on: https://stackoverflow.com/questions/97097/what-is-the-c-sharp-version-of-vb-nets-inputdialog
            </summary>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.InputBox.ShowInputDialog(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Simple InputBox implementation for C#.
            </summary>
            <param name="owner">Owning window</param>
            <param name="input">Input/output string</param>
            <param name="title">Dialog title</param>
            <param name="labelText">Text on label in dialog box</param>
            <returns>DialogResult indicating which button user clicked</returns>
        </member>
        <member name="T:Arsenal.ImageMounter.Dialogs.NativeWindowHandle">
            <summary>
            Implements <see cref="T:System.Windows.Forms.IWin32Window"/> using a native window handle
            </summary>
        </member>
        <member name="P:Arsenal.ImageMounter.Dialogs.NativeWindowHandle.Handle">
            <summary>
            Native window handle
            </summary>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.NativeWindowHandle.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="handle">Native window handle to use</param>
        </member>
        <member name="M:Arsenal.ImageMounter.Dialogs.NativeWindowHandle.ToString">
            <summary>
            Converts the numeric value of the current native window handle to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
    </members>
</doc>
